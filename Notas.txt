
 Notas:
  -> Notificações no Dashboard
  -> Dashboard: Partilha de avaliações no tripadvisor
  -> Agradecimento no check-out e pedir avaliação
  -> Caso não tenha reclamação abre "criar nova"
  -> Partilhar reclamação para "equipa" por email
  -> Dash Códigos (mostrar código QR e enviar para um email?)

«-------»

 Relatório Semanal:

  1ª Semana: (08/03 a 15/03)
   Escolha da Metodologia
   Decisão entre Android e IOS
   Escolha de API e Framework
   Planeamento & Entrega
   Hotéis Estrelas - Visualizar Mercado 
   Público-Alvo (Clientes)
   Aplicações Semelhantes (Concorrência)
   Diagrama de Comunicação entre Apps
   Lista de Requisitos

  2ª/3º Semana: (15/03 a 28/03)
   Desenvolvimento de Logotipo
   Funcionalidades da Aplicação
   Revisão dos Requisitos
   Criação das User Stories
   Inicio de Protótipos

  4º/5ª Semana: (28/03 a 11/04)
   Continuação das User Stories
   Critérios de Aceitação / Testes nas User Stories
   Contrução de Protótipos
   Inicio Diagrama UML
   Instalação Base da API (Laravel & Passport & Lang PT) 
   Autenticação API

  6ª Semana: (11/04 a 18/04)
   Implementação API - Parte User (Requests, Middlewares, etc.)
   Implementação API - Parte Código
   Protótipo Atualização
   UML Atualização

  7/8ª Semana: (18/04 a 02/05)
   Implementação API - (Códigos, Middleware, etc.)
   Início Dashboard Web - Template & Configurações
   Autenticação no Dashboard
   Inicio de Códigos e Users no Dashboard

  9ª Semana: (02/05 a 10/05)
   Implementação API - (Users, Códigos, Reclamações e UserCodes)
   Implementação Dashboard - (Auth, Users, Códigos e Reclamações)
   Autorizações e tipos de utilizadores na API e Dashboard

  10º Semana: (11/05 a 17/05)
   Implementação API - (Reclamações, Fotos, Avaliações, Melhorias, Bugs e Início Estatísticas)
   Implementação Dashboard - (Reclamações, Fotos, Avaliações, Melhorias, Bugs e Início Estatísticas)
   Inicio de Implementação Android - (Landing Page, Login e Registo)
   Relatório   

  11/12ºSemana: (18/05 a 31/05)
   Iniciar Sprint (Login e Registo e Perfil)
   Implementação Dashboard - (Filtros e Ordenações)
   Colocação API em Servidor
   Relatório

«-------»

 Pacotes Utilizados (API):
    -> Laravel: (https://laravel.com/docs/10.x/installation#your-first-laravel-project)
	1. composer create-project laravel/laravel happyguest-api
	2. ficheiro .env
	3. php artisan key:generate
	4. instalar passport
	5. php artisan storage:link

    -> Laravel Passport: (https://laravel.com/docs/10.x/passport#installation)
	1. composer require laravel/passport
	2. php artisan migrate
	3. php artisan passport:install

    -> Lang PT: (https://laravel-lang.com/installation/)
	1. composer require laravel-lang/common --dev
	2. php artisan lang:add pt
	3. php artisan lang:update

    -> Laravel Cascade Soft Deletes: (https://github.com/michaeldyrynda/laravel-cascade-soft-deletes)
	1. composer require dyrynda/laravel-cascade-soft-deletes

«-------»

 Dashboard (WEB):
    -> Template: (https://github.com/justboil/admin-one-vue-tailwind)
	1. npm install
	2. npm run dev
